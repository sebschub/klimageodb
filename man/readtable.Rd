% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_read.R
\name{readtable}
\alias{readtable}
\alias{dbReadTable_site}
\alias{dbReadTable_device_manufacturer}
\alias{dbReadTable_device_type}
\alias{dbReadTable_device_model}
\alias{dbReadTable_device}
\alias{dbReadTable_calibration_state}
\alias{dbReadTable_physical_quantity}
\alias{dbReadTable_integration_type}
\alias{dbReadTable_integration}
\alias{dbReadTable_person}
\alias{dbReadTable_measurand}
\alias{dbReadTable_quality_flag}
\alias{dbReadTable_station_adlershof}
\alias{dbReadTable_station_adlershof_correction}
\alias{dbReadTable_station_patagonia}
\alias{dbReadTable_station_patagonia_correction}
\alias{dbReadTable_device_model_detail}
\alias{dbReadTable_device_detail}
\alias{dbReadTable_calibration_state_detail}
\alias{dbReadTable_integration_detail}
\alias{dbReadTable_measurand_detail}
\alias{dbReadTable_station_adlershof_corrected}
\alias{dbReadTable_station_patagonia_corrected}
\title{Table reading}
\usage{
dbReadTable_site(conn)

dbReadTable_device_manufacturer(conn)

dbReadTable_device_type(conn)

dbReadTable_device_model(conn)

dbReadTable_device(conn)

dbReadTable_calibration_state(conn)

dbReadTable_physical_quantity(conn)

dbReadTable_integration_type(conn)

dbReadTable_integration(conn)

dbReadTable_person(conn)

dbReadTable_measurand(conn)

dbReadTable_quality_flag(conn)

dbReadTable_station_adlershof(conn, start_datetime = NULL,
  end_datetime = NULL, md_id = NULL)

dbReadTable_station_adlershof_correction(conn, start_datetime = NULL,
  end_datetime = NULL, md_id = NULL)

dbReadTable_station_patagonia(conn, start_datetime = NULL,
  end_datetime = NULL, md_id = NULL)

dbReadTable_station_patagonia_correction(conn, start_datetime = NULL,
  end_datetime = NULL, md_id = NULL)

dbReadTable_device_model_detail(conn)

dbReadTable_device_detail(conn)

dbReadTable_calibration_state_detail(conn)

dbReadTable_integration_detail(conn)

dbReadTable_measurand_detail(conn)

dbReadTable_station_adlershof_corrected(conn, start_datetime = NULL,
  end_datetime = NULL, md_id = NULL)

dbReadTable_station_patagonia_corrected(conn, start_datetime = NULL,
  end_datetime = NULL, md_id = NULL)
}
\arguments{
\item{conn}{Database connection.}

\item{start_datetime}{Start date and time as a single POSIXct value.}

\item{end_datetime}{End date and time as a single POSIXct value.}

\item{md_id}{Integer vector of measurand ID.}
}
\value{
The functions return a data frame that contains the data from the
  respective remote table, effectively the result of calling
  \code{\link[DBI]{dbGetQuery}} with \code{SELECT * FROM <name>}. Commands
  that retrieve measurement data (\code{dbReadTable_station_*}) allow a
  preselection of the data with \code{start_datetime}, \code{end_datetime}
  and \code{md_id}; all other tables are retrieved completely. An error is
  raised if the table does not exist. An empty table is returned as a data
  frame with zero rows.
}
\description{
These function retrieve the respective tables and views as a data frame from
the database.
}
\details{
Most of the listed function retrieve present tables in the database. For
convinience, function of the form \code{dbReadTable_*_detail} receive the
views which join different database tables together. For example,
\code{dbReadTable_measurand_detail} retrieves the \code{measurand} table with
all id fields replaced by the corresponding information in
\code{physical_quantity}, \code{calibration_state}, etc. Only the tables that
include measurement data allow a preselection of the data to retrieve only a
part of the data set.
}
\seealso{
\code{\link[DBI]{dbReadTable}} for the general function to retrieve
  complete tables. \code{\link[DBI]{dbGetQuery}} and
  \url{http://db.rstudio.com/best-practices/run-queries-safely/} for more
  general SQL queries. Alternatively, you can use \code{\link[dplyr]{tbl}} of
  the \code{dplyr} package to only work on part of the database.
}
